<Project Sdk="Microsoft.NET.Sdk.Razor">

	<PropertyGroup>
		<TargetFramework>net6.0</TargetFramework>
		<Version>0.1.0</Version>
		<PackageProjectUrl></PackageProjectUrl>
		<PackageIcon>logo_blazorcomponent_32.png</PackageIcon>
		<PackageIconUrl />
		<RepositoryUrl>https://github.com/BlazorComponent/BlazorComponent</RepositoryUrl>
		<RepositoryType>github</RepositoryType>
		<Description>BlazorComponent</Description>
		<PackageReleaseNotes />
		<PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
	  <DocumentationFile></DocumentationFile>
	</PropertyGroup>


	<ItemGroup>
		<SupportedPlatform Include="browser" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.AspNetCore.Components.Web" Version="6.0.0-preview.3.21201.13" />
		<PackageReference Include="OneOf" Version="3.0.178" />
	</ItemGroup>

	<ItemGroup>
		<Folder Include="wwwroot\" />
	</ItemGroup>

	<ItemGroup>
		<!-- ignore the tsconfig.json file in package -->
		<Content Remove="tsconfig.json" />
		<None Include="..\..\..\docs\logo_blazorcomponent_32.png">
		  <Pack>True</Pack>
		  <PackagePath></PackagePath>
		</None>
		<None Include="tsconfig.json" CopyToOutputDirectory="Never"></None>
	</ItemGroup>

	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SolutionDir)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes...$(SolutionDir)" />
		<Exec WorkingDirectory="$(SolutionDir)" Command="npm install" />
	</Target>

	<Target Name="DebugRunGulp" BeforeTargets="DebugEnsureNodeEnv" Condition=" '$(Configuration)' == 'Debug' And Exists('$(SolutionDir)node_modules') ">
		<Exec WorkingDirectory="$(SolutionDir)" Command="npm run gulp:components" />
	</Target>

	<Target Name="PublishRunGulp" AfterTargets="ComputeFilesToPublish">
		<Exec WorkingDirectory="$(SolutionDir)" Command="npm install" />
		<Exec WorkingDirectory="$(SolutionDir)" Command="npm run gulp:components" />
	</Target>

</Project>
